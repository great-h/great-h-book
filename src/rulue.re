= すごい広島のルール

すごい広島に参加する上で、3つのルールが設けられています。

 * すごい広島内でやることを宣言すること
 * すごい広島でしたことをWeb上にアウトプットすること
 * アウトプットしたことを「すごい広島」のサイトに載せること

MUSTではありませんが@<strong>{SHOULD}です。

=== やることを宣言する

参加している「すごい広島」の中で、自分がやることを宣言することになっています。
宣言する場所はGitHubのIssuesです。
GitHubにはグループのような機能であるOrganizationがあり、そのグループの中に複数のリポジトリがあります。
リポジトリのひとつひとつにIssuesがあり、すごい広島のウェブサイトのリポジトリの中にあるIssuesに宣言します。

==== GitHubのOrganization

GitHubには「すごい広島」というグループが作られています。
これはGitHubのOrganizationという機能を使うと作ることができます。
すごい広島のグループの英名は@<tt>{great-h}です。
Organizationは複数のリポジトリをもつことができます。

==== GitHubのリポジトリ

リポジトリはプロジェクトのようなもので、プロジェクト単位に作成します。

すごい広島には複数のリポジトリが作られています。
すごい広島には@<tt>{great-h.github.io}というリポジトリがあります。
このリポジトリは@<href>{http://great-h.github.io/}というウェブサイトのためのものです。
グループの名前が@<tt>{great-h}なので、リポジトリ名と合わせて@<tt>{great-h/great-h.github.io}と書いてリポジトリを表現することがあります。

このリポジトリはすごい広島のウェブサイトの中身です。
このリポジトリの中身を書き換えるとすごい広島のサイトも対応した箇所が変更されるように設定してあります。

==== GitHubのIssues

GitHubのIssuesという機能について説明します。
前述の通り、この機能はリポジトリごとにあります。

Issuesはバグやタスクを管理するための機能で、何か問題をみつけたり、追加したい新機能を書き込みをする場所です。
すごい広島では、やることを宣言するために、Issuesを利用しています。

バグやタスクを報告するにはIssuesの中にIssueを作ります。
Issueを作るにはタイトルと本文が必要になります。
他にもオプションで、

 * ラベル
 * マイルストーン
 * アサイン

を設定できます。

ラベルはIssueがどんな種類なのか分類するための機能です。
タグといわれる機能と等価と考えることもできるでしょう。
マイルストーンは節目を表すものです。
マイルストーンは「次回のリリースはこのマイルストーンに設定したIssueを全部消化したら公開する」のような使い方をします。


==== Issueを使ったやること宣言

さきほど紹介したIssueを作成し、その日の「すごい広島」のやることを書きます。
@<tt>{great-h/great-h.github.io}のリポジトリのIssuesを利用します。
宣言する内容には特に制限はなく、その日に終わらなくても構いません。
仕事でもよいし、自分が勉強したいことでもよいです。

作成したら、ラベル、マイルストーン、アサインの設定します。
ラベルは「やること宣言」というのが用意されていますので、これを設定します。
現地にいない場合は「エア参加」というラベルを用意しているので、これを使ってください。
マイルストーンは日付を元に作成していて、2014年8月23日であれば@<tt>{20140823}というマイルストーンを設定します。
最後にアサインは自分を設定します。

注意点があります。
はじめての場合はラベルやマイルストーンは設定できません。
リポジトリへのアクセス権限が付与されていないためです。
やること宣言をすれば、スタッフの人がリポジトリへのアクセス権限を追加してくれますので、利用できるようになります。

以上がやること宣言です。

=== ウェブ上にアウトプットする

やることを宣言したので、あとは自由に過ごします。
自由に過ごしていただいて構いませんが、自分が考えたこと、学んだことを忘れても大丈夫なようにウェブ上に残してください。
これは簡単なように見えて意外と難しいです。
時間内で、できることを考えて、まとめられる範囲を意識しつつ無理のないようにやることが大切です。

負担が少ないやり方をひとつ紹介しますと、Twitterに書き込みしてTogetterなどのサービスを使いツイートをまとめたり、やること宣言のIssueにコメントしてかきこむなどの方法があります。
もちろん、時間をかけてブログ記事を書いても構いません。

すごい広島の目的の中に情報発信力を向上するというものがあったと思います。
運営側の都合ですが、学習効果も上がるのでぜひ挑戦してみてください。

=== すごい広島のサイトに成果を掲載する

ウェブ上にアウトプットしてもらったので、アウトプットした内容がどこにあるか他の人にもわかるようにします。
すごい広島は各回に専用のページがありますので、そこからリンクを貼ります。
そのためには、すごい広島のウェブサイトを変更する必要があります。
GitHubのプルリクエストを使うと「すごい広島」のウェブサイトを更新することができます。

==== Pull Requestをする

すごい広島のウェブサイトを更新するには、@<href>{great-h/great-h.github.io,https://github.com/great-h/great-h.github.io}のファイルを変更する必要があります。
実は直接変更することもできますが、GitHubのPull Requestという機能を使って行ってください。
Pull Requestというのは、「私はこのファイルの内容をこのように変更したい。どうでしょうか。問題なければ利用してください」というお願いをすることです。
アウトプットした情報へのリンクを追加したものを用意して、「これを追加してください」とお願いすることになります。

変更するファイルは@<tt>{_post}ディレクトリにあります。
2014年8月27日の67回の場合は@<tt>{_post/2014-08-27-event-067.markdown}というファイルを編集します。
参加登録をしている場合は、自分の名前がすでに書き込みされているはずです。
そのすぐ下に、リンクを追加します。

ファイルの拡張子をみればわかりますが、マークダウンという形式で書かれています。書き方がわからない場合は他の人の書き方を参考にしてみてください。

@<comment>{あとで書く マークダウン}

===[column] すごい広島で効率よく学習するには

すごい広島に参加すると本当に勉強になるのでしょうか。
それは参加する人次第です。
ただ、はっきり言えることですが、独りで学習するほうが効率が良い場面はたくさんあります。
周りに話す人がいれば、気は逸れますし、わざわざ交通費を払ってまで参加する価値があるのでしょうか。

しかし、独りで学習するのは、いつでも自分で選択して時間を確保することができます。
すごい広島の時間は誰かに教えてもらったり、質問したりすることができる時間と考えることをおすすめします。
プログラミングで初めてのことに挑戦すると、ときどき後から思えば簡単だったことに時間を取られてしまうことがないでしょうか。
もし経験者に聞くことができれば、あっという間に解決することがあります。
解決しない場合もあるかもしれませんが、誰かが解決してくれる可能性が高まります。

すごい広島で効率よく学習するには、他の人が得意なことで自分が挑戦したいことを学習すると効果的に時間を使うことができます。
また、教える側になることも非常に勉強になりますので、教える側になったり、気軽に質問してみましょう。

最後になりますが、学習するには、継続することがとても大事です。
毎日3時間勉強することを三日坊主になると9時間の勉強時間ですが、1週間に1時間勉強することを1年間続けることができれば50時間勉強することができます。
これを20年、30年続けることができれば非常に長い勉強時間を確保することができます。1日1時間何かを続けることができれま365時間もの時間になります。
小さなアウトプットを続けることができれば、なんでもないような些細なアウトプットがきっと@<strong>{すごい}ことになっているでしょう。
